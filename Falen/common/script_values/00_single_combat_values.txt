############################
# COMBAT SETTINGS
############################

# By default, how much % extra do we pump it up when someone is risking injury? Occurs *after* it has been determined that they may be injured, and just increases that chance.
starting_injury_bonus = 10

# How much of a gap do you need, initially, between you and your opponent in order to win?
starting_success_threshold = 125

# How many rounds can the single combat go before it enters sudden death?
round_cap_limit = 4

# When does it get easier to injure yourself, and by how much?
round_injury_bonus_lower = 3
round_injury_bonus_lowest = 4
round_injury_adjustment_lower = 10
round_injury_adjustment_lowest = 30

# When does it get easier to win, and by how much?
round_success_threshold_lower = 3
round_success_threshold_lowest = 4
round_success_adjustment_lower = -15
round_success_adjustment_lowest = -20

############################
# SINGLE COMBAT SKILL RATINGS
############################

low_scsk = low_skill_rating
mediocre_scsk = mediocre_skill_rating
medium_scsk = medium_skill_rating
decent_scsk = decent_skill_rating
high_scsk = high_skill_rating
very_high_scsk = very_high_skill_rating
extremely_high_scsk = extremely_high_skill_rating

############################
# COMBAT ROLLS
############################

# Injury Risk values
injury_risk_none = 0
injury_risk_low = 25
injury_risk_medium = 50
injury_risk_high = 75
injury_risk_very_high = 100

# Duel Success values
duel_success_none = 0
duel_success_low = 25
duel_success_medium = 50
duel_success_high = 75
duel_success_very_high = 100

############################
# DESC THRESHOLDS
############################

sc_defender_injury_check_actual = {
	value = scope:sc_defender.var:sc_defender_injury_risk_check
	subtract = scope:sc_defender.var:sc_defender_duel_success_score
}

sc_attacker_injury_check_actual = {
	value = scope:sc_attacker.var:sc_attacker_injury_risk_check
	subtract = scope:sc_attacker.var:sc_attacker_duel_success_score
}

single_combat_injury_very_unlikely_value = -50
single_combat_injury_unlikely_value = -10
single_combat_injury_neutral_value = 10
single_combat_injury_likely_value = 40

single_combat_success_almost_impossible_value = -70
single_combat_success_very_unlikely_value = -45
single_combat_success_unlikely_value = -20
single_combat_success_likely_value = 20
single_combat_success_very_likely_value = 45
single_combat_success_almost_certain_value = 70

############################
# COMBAT MOVE WEIGHTING CONTROLS
############################

sce_regular_combat_repeat_down_weight = -750

############################
# COMBAT MOVE AI WEIGHTS
############################

sce_ai_mod_trait_weight_light = 25

sce_ai_mod_trait_weight_medium = 50

sce_ai_mod_trait_weight_heavy = 75

sce_ai_mod_trait_down_weight_medium = -50

############################
# COMBAT MOVE SPECIAL EFFECTS VALUES
############################

combat_move_pocket_silver_value = 20

combat_move_reason_you_suck_speech_value = {
	value = diplomacy
	# Every 1pts of diplomacy gives 5 prestige.
	multiply = 5
}

combat_move_butchery_dread_value = {
	value = prowess
	# Every 2pts of prowess gives a point of dread.
	divide = 2
	# Up to a sensible maximum.
	max = 10
}

combat_move_blade_dance_value = {
	value = prowess
	# Every 1pts of prowess gives 5 prestige.
	multiply = 5
}

# Since this doesn't refere to a true threshold, a malus means incrementing the number (bringing you closer to the eventual target).
combat_move_wound_threshold_malus_1 = 30
combat_move_wound_threshold_malus_2 = 40
combat_move_wound_threshold_malus_3 = 50

# Since this doesn't refere to a true threshold, a bonus means decrementing the number (bringing you further away from the eventual target).
combat_move_wound_threshold_bonus_1 = -30
combat_move_wound_threshold_bonus_2 = -40
combat_move_wound_threshold_bonus_3 = -50

############################
# MISC
############################

# Calculates a character's prowess, plus the number of traits they have with beneficial special combat moves.
sce_has_single_combat_special_traits_value = {
	value = prowess

	# Blademaster.
	if = {
		limit = { has_trait = lifestyle_blademaster }
		add = 10
	}
	# Hunter.
	if = {
		limit = { has_trait = lifestyle_hunter }
		add = 10
	}
	# Berserker.
	if = {
		limit = { has_trait = berserker }
		add = 10
	}
	# Shieldmaiden.
	if = {
		limit = { has_trait = shieldmaiden }
		add = 10
	}
	# Varangian.
	if = {
		limit = { has_trait = varangian }
		add = 10
	}
	# Deviant.
	if = {
		limit = { has_trait = deviant }
		add = 10
	}
	# Viking.
	if = {
		limit = { has_trait = viking }
		add = 10
	}
}
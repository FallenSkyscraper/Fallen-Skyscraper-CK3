create_artifact_crown_industrial_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }

	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {	
		name = crown_industrial_name
		description = crown_industrial_description
		type = helmet
		visuals = industrial_crown
		wealth = scope:wealth
		quality = scope:quality
		template = industrial_crown_template
		history = {
			type = created
			date = 2232.1.1
			recipient = character:130 #대전왕
			location = province:2638 #대전
			
		}
		modifier = crown_industrial_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = industrial_crown
		save_scope_as = epic
		add_artifact_title_history = {
			target = title:d_suwon
			date = 2432.12.3
		}
	}
	
}

create_artifact_hec_crown_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }

	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {	
		name = hec_crown_name
		description = hec_crown_description
		type = helmet
		visuals = industrial_crown
		wealth = scope:wealth
		quality = scope:quality
		template = hec_crown_template
		history = {
			type = created
			date = 2290.1.1
			recipient = character:4001 #초대황제
			location = province:1046 #안산
			
		}
		modifier = hec_crown_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	
}

create_artifact_pedestal_cheondo_relic_effect_hist = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	get_artifact_quality_effect = yes
	get_artifact_wealth_effect = yes

	# Identify which relic it is
	random_list = {
		10 = {
			trigger = {
				NOT = {
					any_artifact = {
						has_variable = cheondo_crown
					}
				}
			}
			save_scope_value_as = {
				name = cheondo_relic_name
				value = flag:crown
			}
		}
	}

	# Create the artifact
	if = {
		limit = {
			exists = scope:cheondo_relic_name
			OR = {

				scope:cheondo_relic_name = flag:crown

			}
		}
		set_artifact_rarity_illustrious = yes
		create_artifact = {
			name = artifact_pedestal_reliquary_cheondo_name
			description = artifact_pedestal_reliquary_cheondo_description
			type = pedestal
			wealth = scope:wealth
			quality = scope:quality
			template = cheondo_artifact_template
			visuals = pedestal_cheondo_relic
			history = {
				type = created_before_history
			}
			modifier = artifact_placeholder_modifier
			save_scope_as = newly_created_artifact
		}
	}
	else = {
		create_artifact = {
			name = artifact_pedestal_reliquary_cheondo_name
			description = artifact_pedestal_reliquary_cheondo_description
			type = pedestal
			wealth = scope:wealth
			quality = scope:quality
			template = cheondo_artifact_template
			visuals = reliquary
			history = {
				type = created_before_history
			}
			modifier = artifact_placeholder_modifier
			save_scope_as = newly_created_artifact
		}
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = {
			name = relic
			value = flag:cheondo
		}
		if = {
			limit = {
				exists = scope:cheondo_relic_name
				scope:cheondo_relic_name = flag:crown
			}
			set_variable = cheondo_crown
		}
		add_scaled_artifact_modifier_piety_effect = yes
		add_scaled_artifact_modifier_grandeur_small_effect = yes
		if = {
			limit = {
				OR = {
					rarity = famed
					rarity = illustrious
				}
			}
			add_2_scaled_artifact_modifier_devotion_effect = yes
			
		}
		else = {
			add_scaled_artifact_modifier_devotion_effect = yes
		}
		add_artifact_modifier = artifact_monthly_prestige_penalty_modifier #overwrite default creation modifier
		save_scope_as = epic
	}
}

create_artifact_pedestal_confucianism_relic_effect_hist = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	get_artifact_quality_effect = yes
	get_artifact_wealth_effect = yes

	# Identify which relic it is
	random_list = {
		10 = {
			trigger = {
				NOT = {
					any_artifact = {
						has_variable = confucianism_crown
					}
				}
			}
			save_scope_value_as = {
				name = confucianism_relic_name
				value = flag:crown
			}
		}
	}

	# Create the artifact
	if = {
		limit = {
			exists = scope:confucianism_relic_name
			OR = {
				scope:confucianism_relic_name = flag:crown
			}
		}
		set_artifact_rarity_illustrious = yes
		create_artifact = {
			name = artifact_pedestal_reliquary_confucianism_name
			description = artifact_pedestal_reliquary_confucianism_description
			type = pedestal
			wealth = scope:wealth
			quality = scope:quality
			template = confucianism_artifact_template
			visuals = pedestal_confucianism_relic
			history = {
				type = created_before_history
			}
			modifier = artifact_placeholder_modifier
			save_scope_as = newly_created_artifact
		}
	}
	else = {
		create_artifact = {
			name = artifact_pedestal_reliquary_confucianism_name
			description = artifact_pedestal_reliquary_confucianism_description
			type = pedestal
			wealth = scope:wealth
			quality = scope:quality
			template = confucianism_artifact_template
			visuals = reliquary
			history = {
				type = created_before_history
			}
			modifier = artifact_placeholder_modifier
			save_scope_as = newly_created_artifact
		}
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = {
			name = relic
			value = flag:confucianism
		}
		if = {
			limit = {
				exists = scope:confucianism_relic_name
				scope:confucianism_relic_name = flag:crown
			}
			set_variable = confucianism_crown
		}
		add_scaled_artifact_modifier_piety_effect = yes
		add_scaled_artifact_modifier_grandeur_small_effect = yes
		if = {
			limit = {
				OR = {
					rarity = famed
					rarity = illustrious
				}
			}
			add_2_scaled_artifact_modifier_devotion_effect = yes
			
		}
		else = {
			add_scaled_artifact_modifier_devotion_effect = yes
		}
		add_artifact_modifier = artifact_monthly_prestige_penalty_modifier #overwrite default creation modifier
		save_scope_as = epic
	}
}

create_artifact_pedestal_mechanism_relic_effect_hist = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	get_artifact_quality_effect = yes
	get_artifact_wealth_effect = yes

	# Identify which relic it is
	random_list = {
		10 = {
			trigger = {
				NOT = {
					any_artifact = {
						has_variable = mechanism_crown
					}
				}
			}
			save_scope_value_as = {
				name = mechanism_relic_name
				value = flag:crown
			}
		}
		10 = {
			save_scope_value_as = {
				name = mechanism_relic_name
				value = flag:radio
			}
		}
		10 = {
			save_scope_value_as = {
				name = mechanism_relic_name
				value = flag:calc
			}
		}
	}

	# Create the artifact
	if = {
		limit = {
			exists = scope:mechanism_relic_name
			OR = {
				scope:mechanism_relic_name = flag:crown
			}
		}
		set_artifact_rarity_illustrious = yes
		create_artifact = {
			name = artifact_giho_crown_mechanism_name
			description = artifact_giho_crown_mechanism_description
			type = pedestal
			wealth = scope:wealth
			quality = scope:quality
			template = mechanism_artifact_template
			visuals = crown
			history = {
				type = created_before_history
			}
			modifier = artifact_placeholder_modifier
			save_scope_as = newly_created_artifact
		}
	}
	else = {
		create_artifact = {
			name = artifact_pedestal_reliquary_mechanism_name
			description = artifact_pedestal_reliquary_mechanism_description
			type = pedestal
			wealth = scope:wealth
			quality = scope:quality
			template = mechanism_artifact_template
			visuals = reliquary
			history = {
				type = created_before_history
			}
			modifier = artifact_placeholder_modifier
			save_scope_as = newly_created_artifact
		}
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = {
			name = relic
			value = flag:mechanism
		}
		if = {
			limit = {
				exists = scope:mechanism_relic_name
				scope:mechanism_relic_name = flag:crown
			}
			set_variable = mechanism_crown
		}
		add_scaled_artifact_modifier_piety_effect = yes
		add_scaled_artifact_modifier_grandeur_small_effect = yes
		if = {
			limit = {
				OR = {
					rarity = famed
					rarity = illustrious
				}
			}
			add_2_scaled_artifact_modifier_devotion_effect = yes
			
		}
		else = {
			add_scaled_artifact_modifier_devotion_effect = yes
		}
		add_artifact_modifier = artifact_monthly_prestige_penalty_modifier #overwrite default creation modifier
		save_scope_as = epic
	}
}


create_artifact_pedestal_manchurian_relic_effect_hist = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	get_artifact_quality_effect = yes
	get_artifact_wealth_effect = yes

	# Identify which relic it is
	random_list = {
		10 = {
			save_scope_as = {
				name = manchurian_relic_name
				value = flag:spear_court
			}
		}
		#10 = {
		#	save_scope_as = {
		#		name = manchurian_relic_name
		#		value = flag:bow_court
		#	}
		#}
		10 = {
			save_scope_as = {
				name = manchurian_relic_name
				value = flag:banner
			}
		}
		10 = {
			save_scope_as = {
				name = manchurian_relic_name
				value = flag:armor
			}
		}
		10 = {
			save_scope_as = {
				name = manchurian_relic_name
				value = flag:saddle
			}
		}
	}

	# Create the artifact
	if = {
		limit = {
			exists = manchurian_relic_name
			OR = {
				scope:manchurian_relic_name = flag:spear_court
			}
		}
		create_artifact = {
			name = artifact_pedestal_manchurian_spear_name
			description = artifact_pedestal_manchurian_spear_description
			type = pedestal
			wealth = scope:wealth
			quality = scope:quality
			template = manchurian_artifact_template
			visuals = pedestal_longinus
			history = {
				type = created_before_history
			}
			modifier = artifact_placeholder_modifier
			save_scope_as = newly_created_artifact
		}
	}
	else_if = {
		limit = {
			exists = manchurian_relic_name
			scope:manchurian_relic_name = flag:saddle
		}
		create_artifact = {
			name = artifact_pedestal_reliquary_manchurian_name
			description = artifact_pedestal_reliquary_manchurian_description
			type = pedestal
			wealth = scope:wealth
			quality = scope:quality
			template = manchurian_artifact_template
			visuals = saddle
			history = {
				type = created_before_history
			}
			modifier = artifact_placeholder_modifier
			save_scope_as = newly_created_artifact
		}
	}
	else_if = {
		limit = {
			exists = manchurian_relic_name
			scope:manchurian_relic_name = flag:banner
		}
		create_artifact = {
			name = artifact_banner_manchurian_name
			description = artifact_banner_manchurian_description
			type = wall_big
			wealth = scope:wealth
			quality = scope:quality
			template = manchurian_artifact_template
			visuals = ep1_mena_banner_03_entity
			history = {
				type = created_before_history
			}
			modifier = artifact_placeholder_modifier
			save_scope_as = newly_created_artifact
		}
		
	}
	else_if = {
		limit = {
			exists = manchurian_relic_name
			scope:manchurian_relic_name = flag:armor
		}
		create_artifact = {
			name = artifact_manchurian_armor_name
			description = artifact_manchurian_armor_description
			type = armorstand
			wealth = scope:wealth
			quality = scope:quality
			template = manchurian_artifact_template
			visuals = armor_court
			history = {
				type = created_before_history
			}
			modifier = artifact_placeholder_modifier
			save_scope_as = newly_created_artifact
		}
	}
	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = {
			name = relic
			value = flag:manchurian
		}
		if = {
			limit = {
				exists = scope:manchurian_relic_name
				scope:manchurian_relic_name = flag:spear_court
			}
			set_variable = manchurian_spear
		}
		else_if = {
			limit = {
				exists = scope:manchurian_relic_name
				scope:manchurian_relic_name = flag:armor
			}
			set_variable = manchurian_armor
		}
		else_if = {
			limit = {
				exists = scope:manchurian_relic_name
				scope:manchurian_relic_name = flag:banner
			}
			set_variable = manchurian_banner
		}
		else_if = {
			limit = {
				exists = scope:manchurian_relic_name
				scope:manchurian_relic_name = flag:saddle
			}
			set_variable = manchurian_saddle
		}
		add_scaled_artifact_modifier_piety_effect = yes
		add_scaled_artifact_modifier_grandeur_small_effect = yes
		if = {
			limit = {
				OR = {
					rarity = famed
					rarity = illustrious
				}
			}
			add_2_scaled_artifact_modifier_devotion_effect = yes
			
		}
		else = {
			add_scaled_artifact_modifier_devotion_effect = yes
		}
		add_artifact_modifier = artifact_monthly_prestige_penalty_modifier #overwrite default creation modifier
		save_scope_as = epic
	}
}


create_artifact_pedestal_steelers_pagan_relic_effect_hist = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	get_artifact_quality_effect = yes
	get_artifact_wealth_effect = yes

	# Identify which relic it is
	random_list = {
		10 = {
			save_scope_value_as = {
				name = steelers_pagan_relic_name
				value = flag:astroid
			}
		}
		10 = {
			save_scope_value_as = {
				name = steelers_pagan_relic_name
				value = flag:hammer
			}
		}
		10 = {
			save_scope_value_as = {
				name = steelers_pagan_relic_name
				value = flag:goblet
			}
		}
	}

	# Create the artifact
	if = {
		limit = {
			exists = steelers_pagan_relic_name
			scope:steelers_pagan_relic_name = flag:astroid
		}
		set_artifact_rarity_illustrious = yes
		create_artifact = {
			name = artifact_steelers_pagan_astroid_name
			description = artifact_steelers_pagan_astroid_description
			type = pedestal
			template = steelers_pagan_artifact_template
			visuals = rock
			wealth = scope:wealth
			quality = scope:quality
			history = {
				type = created_before_history
			}
			modifier = artifact_placeholder_modifier
			save_scope_as = newly_created_artifact
		}
	}
	else_if = {
		limit = {
			exists = steelers_pagan_relic_name
			scope:steelers_pagan_relic_name = flag:hammer
		}
		set_artifact_rarity_illustrious = yes
		create_artifact = {
			name = artifact_steelers_pagan_hammer_name
			description = artifact_steelers_pagan_hammer_description
			type = pedestal
			template = steelers_pagan_artifact_template
			visuals = hammer_court
			wealth = scope:wealth
			quality = scope:quality
			history = {
				type = created_before_history
			}
			modifier = artifact_placeholder_modifier
			save_scope_as = newly_created_artifact
		}
	}
	else_if = {
		limit = {
			exists = steelers_pagan_relic_name
			scope:steelers_pagan_relic_name = flag:goblet
		}
		set_artifact_rarity_illustrious = yes
		create_artifact = {
			name = artifact_steelers_pagan_goblet_name
			description = artifact_steelers_pagan_goblet_description
			type = pedestal
			template = steelers_pagan_artifact_template
			visuals = goblet
			wealth = scope:wealth
			quality = scope:quality
			history = {
				type = created_before_history
			}
			modifier = artifact_placeholder_modifier
			save_scope_as = newly_created_artifact
		}
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = {
			name = relic
			value = flag:steelers_pagan
		}
		if = {
			limit = {
				exists = scope:steelers_pagan_relic_name
				scope:steelers_pagan_relic_name = flag:astroid
			}
			set_variable = steelers_pagan_asteroid
		}
		else_if = {
			limit = {
				exists = scope:steelers_pagan_relic_name
				scope:steelers_pagan_relic_name = flag:hammer
			}
			set_variable = steelers_pagan_hammer
		}
		else_if = {
			limit = {
				exists = scope:steelers_pagan_relic_name
				scope:steelers_pagan_relic_name = flag:goblet
			}
			set_variable = steelers_pagan_goblet
		}
		add_scaled_artifact_modifier_piety_effect = yes
		add_scaled_artifact_modifier_grandeur_small_effect = yes
		if = {
			limit = {
				OR = {
					rarity = famed
					rarity = illustrious
				}
			}
			add_2_scaled_artifact_modifier_devotion_effect = yes
			
		}
		else = {
			add_scaled_artifact_modifier_devotion_effect = yes
		}
		add_artifact_modifier = artifact_monthly_prestige_penalty_modifier #overwrite default creation modifier
		save_scope_as = epic
	}
}

create_artifact_pedestal_communism_relic_effect_hist = {
	$OWNER$ = { save_scope_as = owner }
	set_artifact_rarity_illustrious = yes

	random_list = {
		10 = {
			save_scope_value_as = {
				name = communism_relic_name
				value = flag:communist_manifesto
			}
		}
		10 = {
			save_scope_value_as = {
				name = communism_relic_name
				value = flag:soviet_medal
			}
		}
	}

	if = {
		limit = {
			exists = communism_relic_name
			scope:communism_relic_name = flag:communist_manifesto
		}
		set_artifact_rarity_illustrious = yes
		create_artifact = {
			name = artifact_communist_manifesto_name
			description = artifact_communist_manifesto_description
			type = pedestal
			template = communism_artifact_template
			visuals = ep1_western_book_big_01_a_entity
			wealth = scope:wealth
			quality = scope:quality
			history = {
				type = created_before_history
			}
			modifier = artifact_placeholder_modifier
			save_scope_as = newly_created_artifact
		}
	}
	else = {
		set_artifact_rarity_illustrious = yes
		create_artifact = {
			name = artifact_pedestal_reliquary_communism_name
			description = artifact_pedestal_reliquary_communism_description
			type = pedestal
			template = communism_artifact_template
			visuals = reliquary
			wealth = scope:wealth
			quality = scope:quality
			history = {
				type = created_before_history
			}
			modifier = artifact_placeholder_modifier
			save_scope_as = newly_created_artifact
		}
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = {
			name = relic
			value = flag:communism
		}
		if = {
			limit = {
				exists = scope:communism_relic_name
				scope:naturalism_relic_name = flag:communist_manifesto
			}
			set_variable = communism_communist_manifesto
		}
		add_scaled_artifact_modifier_piety_effect = yes
		add_scaled_artifact_modifier_grandeur_small_effect = yes
		if = {
			limit = {
				OR = {
					rarity = famed
					rarity = illustrious
				}
			}
			add_2_scaled_artifact_modifier_devotion_effect = yes
		}
		else = {
			add_scaled_artifact_modifier_devotion_effect = yes
		}
		add_artifact_modifier = artifact_monthly_prestige_penalty_modifier
		save_scope_as = epic
	}
}

create_artifact_pedestal_juche_relic_effect_hist = {
	$OWNER$ = { save_scope_as = owner }
	set_artifact_rarity_illustrious = yes

	random_list = {
		10 = {
			save_scope_value_as = {
				name = juche_relic_name
				value = flag:juche_medal
			}
		}
		10 = {
			save_scope_value_as = {
				name = juche_relic_name
				value = flag:juche_with_centries
			}
		}
	}

	if = {
		limit = {
			exists = juche_relic_name
			scope:juche_relic_name = flag:juche_medal
		}
		set_artifact_rarity_illustrious = yes
		create_artifact = {
			name = artifact_pedestral_reliquary_juche_name
			description = artifact_pedestral_reliquary_juche_description
			type = pedestal
			template = juche_artifact_template
			visuals = reliquary
			wealth = scope:wealth
			quality = scope:quality
			history = {
				type = created_before_history
			}
			modifier = artifact_placeholder_modifier
			save_scope_as = newly_created_artifact
		}
	}
	else = {
		set_artifact_rarity_illustrious = yes
		create_artifact = {
			name = artifact_juche_with_centries_name
			description = artifact_juche_with_centries_description
			type = pedestal
			template = juche_artifact_template
			visuals = ep1_western_book_big_01_a_entity
			wealth = scope:wealth
			quality = scope:quality
			history = {
				type = created_before_history
			}
			modifier = artifact_placeholder_modifier
			save_scope_as = newly_created_artifact
		}
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = {
			name = relic
			value = flag:juche
		}
		if = {
			limit = {
				exists = scope:juche_relic_name
				scope:naturalism_relic_name = flag:juche_with_centries
			}
			set_variable = juche_with_centries
		}
		add_scaled_artifact_modifier_piety_effect = yes
		add_scaled_artifact_modifier_grandeur_small_effect = yes
		if = {
			limit = {
				OR = {
					rarity = famed
					rarity = illustrious
				}
			}
			add_2_scaled_artifact_modifier_devotion_effect = yes
		}
		else = {
			add_scaled_artifact_modifier_devotion_effect = yes
		}
		add_artifact_modifier = artifact_monthly_prestige_penalty_modifier
		save_scope_as = epic
	}
}

create_artifact_pedestal_naturalism_relic_effect_hist = {
	$OWNER$ = { save_scope_as = owner }
	set_artifact_rarity_illustrious = yes

	random_list = {
		10 = {
			save_scope_value_as = {
				name = branch_name
				value = flag:segyesu
			}
		}
		10 = {
			save_scope_value_as = {
				name = naturalism_relic_name
				value = flag:bone
			}
		}
		10 = {
			save_scope_value_as = {
				name = branch_name
				value = flag:segyesu_fruit
			}
		}
		10 = {
			save_scope_value_as = {
				name = naturalism_relic_name
				value = flag:bottle
			}
		}
		10 = {
			save_scope_value_as = {
				name = naturalsim_relic_name
				value = flag:letter
			}
		}
		10 = {
			save_scope_value_as = {
				name = naturalism_relic_name
				value = flag:mine
			}
		}
	}

	if = {
		limit = {
			exists = scope:naturalism_relic_name
			OR = {
				scope:naturalism_relic_name = flag:bone
			}
		}
		set_artifact_rarity_illustrious = yes
		create_artifact = {
			name = artifact_naturalism_skull_name
			description = artifact_naturalism_skull_description
			type = pedestal
			template = naturalism_artifact_template
			visuals = human_skull
			wealth = scope:wealth
			quality = scope:quality
			history = {
				type = created_before_history
			}
			modifier = artifact_placeholder_modifier
			save_scope_as = newly_created_artifact
		}
	}
	else_if = {
		limit = {
			exists = scope:branch_name
			OR = {
				scope:naturalism_relic_name = flag:segyesu
				scope:naturalism_relic_name = flag:segyesu_fruit
			}
		}
		set_artifact_rarity_illustrious = yes
		create_artifact = {
			name = artifact_pedestal_branch_name
			description = artifact_pedestal_branch_description
			type = pedestal
			visuals = pedestal_branch_relic_zoroastr
			wealth = scope:wealth
			quality = scope:quality
			history = {
				type = created_before_history
			}
			modifier = artifact_placeholder_modifier
			save_scope_as = newly_created_artifact
		}
	}
	else_if = {
		limit = {
			exists = scope:naturalism_relic_name
			scope:naturalism_relic_name = flag:bottle
		}
		set_artifact_rarity_illustrious = yes
		create_artifact = {
			name = artifact_pedestal_reliquary_naturalism_name
			description = artifact_pedestal_reliquary_naturalism_description
			type = pedestal
			visuals = bottle
			wealth = scope:wealth
			quality = scope:quality
			history = {
				type = created_before_history
			}
			modifier = artifact_placeholder_modifier
			save_scope_as = newly_created_artifact
		}
	}
	else_if = {
		limit = {
			exists = scope:naturalism_relic_name
			scope:naturalism_relic_name = flag:mine
		}
		set_artifact_rarity_illustrious = yes
		create_artifact = {
			name = artifact_pedestal_reliquary_naturalism_name
			description = artifact_pedestal_reliquary_naturalism_description
			type = pedestal
			visuals = mine
			wealth = scope:wealth
			quality = scope:quality
			history = {
				type = created_before_history
			}
			modifier = artifact_placeholder_modifier
			save_scope_as = newly_created_artifact
		}
	}
	else_if = {
		limit = {
			exists = scope:naturalism_relic_name
			scope:naturalism_relic_name = flag:letter
		}
		set_artifact_rarity_illustrious = yes
		create_artifact = {
			name = artifact_pedestal_reliquary_naturalism_name
			description = artifact_pedestal_reliquary_naturalism_description
			type = pedestal
			visuals = letter
			wealth = scope:wealth
			quality = scope:quality
			history = {
				type = created_before_history
			}
			modifier = artifact_placeholder_modifier
			save_scope_as = newly_created_artifact
		}
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = {
			name = relic
			value = flag:naturalism
		}
		if = {
			limit = {
				exists = scope:naturalism_relic_name
				scope:naturalism_relic_name = flag:bone
			}
			set_variable = naturalism_bone
		}
		else_if = {
			limit = {
				exists = scope:naturalism_relic_name
				scope:naturalism_relic_name = flag:mine
			}
			set_variable = naturalism_mine
		}
		else_if = {
			limit = {
				exists = scope:naturalism_relic_name
				scope:naturalism_relic_name = flag:bottle
			}
			set_variable = naturalism_bottle
		}
		else_if = {
			limit = {
				exists = scope:naturalism_relic_name
				scope:naturalism_relic_name = flag:mine
			}
			set_variable = naturalism_mine
		}
		else_if = {
			limit = {
				exists = scope:branch_name
				scope:branch_name = flag:segyesu
			}
			set_variable = naturalism_segyesu
		}
		else_if = {
			limit = {
				exists = scope:branch_name
				scope:branch_name = flag:segyesu_fruit
			}
			set_variable = naturalism_segyesu_fruit
		}
		add_scaled_artifact_modifier_piety_effect = yes
		add_scaled_artifact_modifier_grandeur_small_effect = yes
		if = {
			limit = {
				OR = {
					rarity = famed
					rarity = illustrious
				}
			}
			add_2_scaled_artifact_modifier_devotion_effect = yes
		}
		else = {
			add_scaled_artifact_modifier_devotion_effect = yes
		}
		add_artifact_modifier = artifact_monthly_prestige_penalty_modifier
		save_scope_as = epic
	}
}
###HEALTH TRIGGER LIST

can_get_non_epidemic_disease_trigger = { #Diseases shouldn't stack. Don't add a non-epidemic disease if you have another, unless that disease is lover's pox
	NOR = {
		has_trait = consumption
		has_trait = cancer
		has_trait = great_pox
		has_trait = gout_ridden
		has_trait = ill
		has_trait = pneumonic
		has_trait = typhus
		has_trait = smallpox
		has_trait = bubonic_plague
		has_trait = leper
	}
}

#Takes argument disease
can_contract_disease_trigger = {
	save_temporary_scope_as = sick_character_check

	# Is not immune to disease
	NOT = { has_character_flag = immune_to_disease }

	#Doesn't already have the trait
	NOT = { has_trait = $DISEASE$ }

	save_temporary_scope_value_as = {
		name = disease_type_for_trigger
		value = flag:$DISEASE$
	}

	trigger_if = { #Lover's pox can only be contracted if you are sexually active
		limit = {
			scope:disease_type_for_trigger = flag:lovers_pox
			is_imprisoned = yes
		}
		imprisoner = {
			OR = {
				AND = {
					scope:sick_character_check = { is_in_prison_type = dungeon }
					any_prisoner = {
						OR = {
							has_relation_lover = scope:sick_character_check
							any_consort = {
								this = scope:sick_character_check
							}
						}
					}
				}
				AND = {
					scope:sick_character_check = { is_in_prison_type = house_arrest }
					OR = {
						any_prisoner = {
							OR = {
								has_relation_lover = scope:sick_character_check
								any_consort = {
									this = scope:sick_character_check
								}
							}
						}
						any_courtier = {
							OR = {
								has_relation_lover = scope:sick_character_check
								any_consort = {
									this = scope:sick_character_check
								}
							}
						}
					}
				}
			}
		}
	}

	#Secondary requirements (mutually exclusive diseases or immunity)
	OR = {
		NOR = { #No secondary requirement
			scope:disease_type_for_trigger = flag:ill
			scope:disease_type_for_trigger = flag:smallpox
			scope:disease_type_for_trigger = flag:bubonic_plague
		}
		AND = {
			scope:disease_type_for_trigger = flag:ill
			NOT = { has_trait = pneumonic }
		}
		AND = {
			scope:disease_type_for_trigger = flag:smallpox
			NOT = { has_character_flag = disease_immunity_smallpox }
		}
		AND = {
			scope:disease_type_for_trigger = flag:bubonic_plague
			NOT = { has_character_flag = disease_immunity_bubonic_plague }
		}
	}

	#No disease stacking
	OR = {
		can_get_non_epidemic_disease_trigger = yes
		OR = {
			scope:disease_type_for_trigger = flag:bubonic_plague
			scope:disease_type_for_trigger = flag:smallpox
		}
		AND = {
			scope:disease_type_for_trigger = flag:pneumonic
			has_trait = ill
		}	
	}

	#Cooldown is over
	NOR = {
		has_character_flag = contraction_cooldown_general #Haven't had a disease for 2 years
		#No specific cooldowns:
		#Ill, you can get it often
		#Smallpox and bubonic plague, after one time you are immune
		#Lover's pox and leper because you never recover
		AND = {
			has_character_flag = contraction_cooldown_pneumonic
			scope:disease_type_for_trigger = flag:pneumonic
		}
		AND = {
			has_character_flag = contraction_cooldown_gout_ridden
			scope:disease_type_for_trigger = flag:gout_ridden
		}
		AND = {
			has_character_flag = contraction_cooldown_typhus
			scope:disease_type_for_trigger = flag:typhus
		}
		AND = {
			has_character_flag = contraction_cooldown_consumption
			scope:disease_type_for_trigger = flag:consumption
		}
		AND = {
			has_character_flag = contraction_cooldown_cancer
			scope:disease_type_for_trigger = flag:cancer
		}
		AND = {
			has_character_flag = contraction_cooldown_great_pox
			scope:disease_type_for_trigger = flag:great_pox
		}
	}
}




has_std_trigger = {
 	OR = {
 		has_trait = lovers_pox
 		has_trait = great_pox
 		has_trait = early_great_pox
 	}
}

has_epidemic_disease_trigger = {
	OR = {
		has_trait = bubonic_plague
		has_trait = smallpox
	}
}

has_contagious_disease_trigger = {  #Only diseases handled by the disease_outbreak_pulse and the disease_recovery_pulse
	OR = {
		has_std_trigger = yes
		has_epidemic_disease_trigger = yes
	}
}

has_yearly_recovery_disease_trigger = {
	OR = {
		has_trait = consumption
		has_trait = cancer
		has_trait = great_pox
		has_trait = gout_ridden
	}
}

has_quarterly_recovery_disease_trigger = {
	OR = {
		
		has_trait = ill
		has_trait = pneumonic
		has_trait = typhus
		has_trait = smallpox
		has_trait = bubonic_plague
	}
}

has_short_disease_trigger = {
	OR = {
		has_trait = ill
		has_trait = pneumonic
		has_trait = typhus
		has_trait = smallpox
		has_trait = bubonic_plague
	}
}

has_serious_disease_trigger = {
	has_trait = bubonic_plague
}
has_insect_carried_disease_trigger = {
	OR = {
		has_trait = bubonic_plague
		has_trait = typhus
	}
}
has_new_contagious_disease_outbreak_story_trigger = {
	any_owned_story = {
		story_type = story_contagious_disease_outbreak
		variable_list_size = {
			name = breakout_victims
			value = 1
		}
	}
}

############################
# COURT PHYSICIAN TRIGGERS #
############################

court_physician_available_trigger = {
	exists = court_owner
	court_owner = {
		employs_court_position = court_physician_court_position
		any_court_position_holder = {
			type = court_physician_court_position
			is_physically_able = yes
		}
	}
}

can_be_court_physician_of = {
	is_courtier_of = $EMPLOYER$
	is_adult = yes
	basic_is_available_ai = yes
	NOT = { has_trait = incapable }
}

can_punish_court_physician = {
	save_temporary_scope_as = court_physician_punisher
	$PHYSICIAN$ = {
		is_alive = yes
		target_is_liege_or_above = scope:court_physician_punisher
	}
}


######################
# TREATMENT TRIGGERS #
######################


has_treatable_disease_trigger = {
	OR = {
		has_trait = consumption
		has_trait = cancer
		has_trait = great_pox
		has_trait = gout_ridden
		has_trait = ill
		has_trait = pneumonic
		has_trait = typhus
		has_trait = smallpox
		has_trait = bubonic_plague
		has_trait = leper
	}
}

has_wounds_trigger = {
	OR = {
		has_trait_rank = {
			trait = wounded
			rank >= 2
		}
		has_character_modifier = infected_wound_modifier
		has_character_modifier = gangrene_modifier
	}
}

has_good_disease_treatment_trigger = {
	OR = {
		has_character_modifier = safe_disease_treatment_success_high_modifier
		has_character_modifier = safe_disease_treatment_success_low_modifier
		has_character_modifier = risky_disease_treatment_success_high_modifier
		has_character_modifier = risky_disease_treatment_success_low_modifier
	}
}

has_recent_treatment_trigger = {
	OR = {
		has_character_modifier = safe_disease_treatment_success_high_modifier
		has_character_modifier = safe_disease_treatment_success_low_modifier
		has_character_modifier = safe_disease_treatment_failure_modifier
		has_character_modifier = risky_disease_treatment_success_high_modifier
		has_character_modifier = risky_disease_treatment_success_low_modifier
		has_character_modifier = risky_disease_treatment_failure_modifier
	}
}

has_recent_wound_treatment_trigger = {
	OR = {
		has_character_modifier = safe_wound_treatment_success_high_modifier
		has_character_modifier = safe_wound_treatment_success_low_modifier
		has_character_modifier = safe_wound_treatment_failure_modifier
		has_character_modifier = risky_wound_treatment_success_modifier
		has_character_modifier = risky_wound_treatment_failure_modifier
	}
}


has_amputation_type_disease_trigger = {
	exists = scope:disease_type
	OR = {
		scope:disease_type = flag:gout_ridden
		scope:disease_type = flag:leper
		scope:disease_type = flag:cancer
	}
}

has_disfigurement_type_disease_trigger = {
	exists = scope:disease_type
	OR = {
		scope:disease_type = flag:bubonic_plague
		scope:disease_type = flag:smallpox
		scope:disease_type = flag:leper
		scope:disease_type = flag:cancer
	}
}


has_short_disease_type_trigger = {
	OR = {
		scope:disease_type = flag:ill 				
		scope:disease_type = flag:pneumonic #3
		scope:disease_type = flag:typhus #3.5
		scope:disease_type = flag:smallpox #3.5
		scope:disease_type = flag:bubonic_plague #6.5
	}
}

has_slow_disease_type_trigger = {
	OR = {
		scope:disease_type = flag:consumption #2
		scope:disease_type = flag:cancer #3
		scope:disease_type = flag:great_pox #1		
		scope:disease_type = flag:gout_ridden #1.5 	
		scope:disease_type = flag:leper #1.5	  						
	}
}

has_high_health_penalty_disease_type_trigger = { #3.5 to 6.5
	scope:disease_type = flag:typhus #3.5
	scope:disease_type = flag:smallpox #3.5
	scope:disease_type = flag:bubonic_plague #6.5
}

has_low_health_penalty_disease_type_trigger = { #3 and lower
	scope:disease_type = flag:ill #1
	scope:disease_type = flag:great_pox #1
	scope:disease_type = flag:gout_ridden #1.5 	
	scope:disease_type = flag:leper #1.5	
	scope:disease_type = flag:consumption #2  	
	scope:disease_type = flag:cancer #3
	scope:disease_type = flag:pneumonic #3
}

minor_disease_flag_for_notification_trigger = {
	OR = {
		scope:disease_type = flag:ill
		scope:disease_type = flag:gout_ridden
		scope:disease_type = flag:lovers_pox
		scope:disease_type = flag:early_great_pox
	}
}

sick_enough_for_relative_to_care_trigger = {
	#For this list of diseases, you need to be dying
	trigger_if = {
		limit = {
			exists = scope:disease_type
			minor_disease_flag_for_notification_trigger = yes
		}
		health < death_chance_dying_health
	}
	#For all others we always notify
	trigger_else = {
		always = yes
	}
}

liege_is_responsible_for_treatment_trigger = {
	is_ruler = no
	exists = liege
	OR = {
		is_child_of = liege
		trigger_if = {
			limit = { exists = liege.primary_spouse }
			this = liege.primary_spouse
		}
		trigger_if = {
			limit = { exists = liege.player_heir }
			this = liege.player_heir
		}
	}
}

liege_picks_treatment_trigger = {
	save_temporary_scope_as = pick_treatment_check
	exists = liege
	liege_is_responsible_for_treatment_trigger = yes
	trigger_if = {
		limit = { exists = scope:disease_type }
		sick_enough_for_relative_to_care_trigger = yes
	}
}

root_picks_treatment_for_sick_character_trigger = {
	scope:sick_character = { liege_picks_treatment_trigger = yes }
	scope:sick_character = { liege = { this = root } }
}

has_infected_or_gangrenous_wound_trigger = {
	OR = {
		has_character_modifier = gangrene_modifier
		has_character_modifier = infected_wound_modifier
	}
}

inform_about_relative_recovery_trigger = {
	is_ruler = yes
	OR = {
		scope:disease_type = flag:lovers_pox #Because it has an effect (removes rejected from bed modifier)
		scope:disease_type = flag:early_great_pox #Because it has an effect (removes rejected from bed modifier)
		scope:disease_type = flag:great_pox #Because it has an effect (removes rejected from bed modifier)
		AND = {
			is_ai = no
			OR = {
				NOT = { minor_disease_flag_for_notification_trigger = yes } #I.e. it's an important disease
				scope:sick_character = {
					is_target_in_variable_list = { #The character got an event when sick character got sick and needs to be updated
						name = recovery_event_receivers
						target = prev
					}
				}
			}
		}
	}
}

has_health_court_owner_trigger = { #Should match save_health_court_owner_effect
	trigger_if = {
		limit = {
			exists = imprisoner
		}
		always = yes
		imprisoner = { save_temporary_scope_as = trigger_health_court_owner }
	}
	trigger_else_if = {
		limit = { exists = host }
		always = yes
		host = { save_temporary_scope_as = trigger_health_court_owner }
	}
	trigger_else = {
		always = no
	}
}

court_physician_can_fail_on_purpose_trigger = {
	scope:physician = {
		dread_modified_ai_boldness = {
			dreaded_character = scope:sick_character
			value > 0
		}
	}
	OR = {
	 	reverse_opinion = {
	 		target = scope:physician
	 		value < 0
	 	}
		has_relation_rival = scope:physician
		has_relation_potential_rival = scope:physician
	}
	NOT = { scope:physician = scope:sick_character }
}

has_traits_that_negate_athletic_trigger = { #Are we already athletic or does any of our traits contradict athletic?
	OR = {
		has_trait = athletic
		has_trait = lazy
		has_trait = infirm
		has_trait = incapable
	}
}

#Did this character's culture or area have any evidence of practicing trepanning?
native_trepanning_trigger = {
	OR = {
		root.culture = {
			OR = {
				has_cultural_pillar = heritage_east_african
				has_cultural_pillar = heritage_west_slavic
				has_cultural_pillar = heritage_central_germanic
				has_cultural_pillar = heritage_west_germanic
				has_cultural_pillar = heritage_dravidian
				has_cultural_pillar = heritage_indo_aryan
			}
		}
		root.faith = faith:armenian_apostolic
		root.culture = culture:armenian
		has_title = title:k_hungary
		has_title = title:k_cuman
		root.capital_province = {
			OR = {
				geographical_region = ghw_region_mediterranean
				geographical_region = ghw_region_anatolia
				geographical_region = world_europe_west_germania
				geographical_region = world_europe_west
				geographical_region = world_africa_north_east
				geographical_region = custom_slavia
				geographical_region = world_india
			}	
		}
	}
}

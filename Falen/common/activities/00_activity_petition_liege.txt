activity_petition_liege = {
	expiration_days = 30
	solo = yes
	color = { 0.353906 0.967188 0.205469 1 }
	start_immediately = yes
	valid = {
		activity_owner = { petition_liege_valid_trigger = yes }
	}
	on_spawn = {
		invite_character_to_activity = activity_owner
		accept_invitation_for_character = activity_owner
	}
	on_activate = {
		activity_owner = {
			save_scope_as = petition_vassal
			liege = { save_scope_as = petition_liege }
			switch = {
				trigger = scope:petition_vassal.var:petition_type
				flag:council_seat = { #Council
					random_list = { # Pick best position, even if occupied 
						2 = {
							trigger = {
								petition_liege_councillor_blocked_trigger = { ROLE = chancellor }
							}
							petition_liege_councillor_compare_modifier = { SKILL = diplomacy ROLE = chancellor }
							petition_liege_0101_councillor_scope_first_effect = { ROLE = chancellor }
							set_variable = {
								name = petition_liege_council_first
								value = flag:chancellor
							}
						}
						2 = {
							trigger = {
								petition_liege_councillor_blocked_trigger = { ROLE = marshal }
							}
							petition_liege_councillor_compare_modifier = { SKILL = martial ROLE = marshal }
							petition_liege_0101_councillor_scope_first_effect = { ROLE = marshal }
							set_variable = {
								name = petition_liege_council_first
								value = flag:marshal
							}
						}
						2 = {
							trigger = {
								petition_liege_councillor_blocked_trigger = { ROLE = steward }
							}
							petition_liege_councillor_compare_modifier = { SKILL = stewardship ROLE = steward }
							petition_liege_0101_councillor_scope_first_effect = { ROLE = steward }
							set_variable = {
								name = petition_liege_council_first
								value = flag:steward
							}
						}
						2 = {
							trigger = {
								petition_liege_councillor_blocked_trigger = { ROLE = spymaster }
							}
							petition_liege_councillor_compare_modifier = { SKILL = intrigue ROLE = spymaster }
							petition_liege_0101_councillor_scope_first_effect = { ROLE = spymaster }
							set_variable = {
								name = petition_liege_council_first
								value = flag:spymaster
							}
						}
						2 = {
							trigger = {
								petition_liege_council_chaplain_appointable_trigger = yes
								petition_liege_councillor_blocked_trigger = { ROLE = court_chaplain }
							}
							petition_liege_councillor_compare_modifier = { SKILL = learning ROLE = court_chaplain }
							petition_liege_0101_councillor_scope_first_effect = { ROLE = court_chaplain }
							set_variable = {
								name = petition_liege_council_first
								value = flag:court_chaplain
							}
						}
					}
					if = { # Less fitting council seat second option
						limit = {
							OR = {
								# Is another position they didn't ask for free which they are at least competent for, or filled but they could do better than the current holder?
								petition_liege_councillor_second_trigger = { ROLE = chancellor SKILL = diplomacy }
								petition_liege_councillor_second_trigger = { ROLE = marshal SKILL = martial }
								petition_liege_councillor_second_trigger = { ROLE = steward SKILL = stewardship }
								petition_liege_councillor_second_trigger = { ROLE = spymaster SKILL = intrigue }
								AND = {
									petition_liege_council_chaplain_appointable_trigger = yes
									petition_liege_councillor_second_trigger = { ROLE = court_chaplain SKILL = learning }
								}
							}
						}
						random_list = {
							2 = {
								trigger = {
									petition_liege_councillor_second_trigger = { ROLE = chancellor SKILL = diplomacy }
								}
								modifier = { factor = scope:petition_vassal.diplomacy }
								petition_liege_0101_councillor_scope_second_effect = { ROLE = chancellor }
								set_variable = {
									name = petition_liege_council_second
									value = flag:chancellor
								}
							}
							2 = {
								trigger = {
									petition_liege_councillor_second_trigger = { ROLE = marshal SKILL = martial }
								}
								modifier = { factor = scope:petition_vassal.martial }
								petition_liege_0101_councillor_scope_second_effect = { ROLE = marshal }
								set_variable = {
									name = petition_liege_council_second
									value = flag:marshal
								}
							}
							2 = {
								trigger = {
									petition_liege_councillor_second_trigger = { ROLE = steward SKILL = stewardship }
								}
								modifier = { factor = scope:petition_vassal.stewardship }
								petition_liege_0101_councillor_scope_second_effect = { ROLE = steward }
								set_variable = {
									name = petition_liege_council_second
									value = flag:steward
								}
							}
							2 = {
								trigger = {
									petition_liege_councillor_second_trigger = { ROLE = spymaster SKILL = intrigue }
								}
								modifier = { factor = scope:petition_vassal.intrigue }
								petition_liege_0101_councillor_scope_second_effect = { ROLE = spymaster }
								set_variable = {
									name = petition_liege_council_second
									value = flag:spymaster
								}
							}
							2 = {
								trigger = {
									AND = {
										petition_liege_council_chaplain_appointable_trigger = yes
										petition_liege_councillor_second_trigger = { ROLE = court_chaplain SKILL = learning }
									}
								}
								modifier = { factor = scope:petition_vassal.learning }
								petition_liege_0101_councillor_scope_second_effect = { ROLE = spymaster }
								set_variable = {
									name = petition_liege_council_second
									value = flag:court_chaplain
								}
							}
						}
					}
				}
				flag:pay_debt = {} #Debt
				flag:war_aid = { #War Aid
					ordered_character_war = {
						limit = {
							is_war_leader = scope:petition_vassal
							trigger_if = {
								limit = {
									scope:petition_vassal = { is_attacker_in_war = prev }
								}
								attacker_war_score < -25
							}
							trigger_else = { defender_war_score < -25 }
						}
						order_by = war_days
						if = {
							limit = { primary_attacker = scope:petition_vassal }
							primary_defender = { save_scope_as = second_party }
						}
						else = {
							primary_attacker = { save_scope_as = second_party }
						}
						save_scope_as = petition_war
					}
				}
				flag:vassal_war = { #Vassal War
					random_character_war = {
						limit = {
							OR = {
								AND = {
									primary_attacker = { this = scope:petition_vassal }
									primary_defender = { is_vassal_of = scope:petition_liege } # Your liege must have the jurisdiction to end the war.
								}
								AND = {
									primary_attacker = { is_vassal_of = scope:petition_liege } # Your liege must have the jurisdiction to end the war.
									primary_defender = { this = scope:petition_vassal }
								}
							}
						}
						if = {
							limit = {
								primary_attacker = scope:petition_vassal
							}
							primary_defender = { save_scope_as = second_party }
						}
						else = {
							primary_attacker = { save_scope_as = second_party}
						}
					}
				}
				flag:faction_war = { #Faction War
					save_scope_as = vassal_faction_target
					ordered_targeting_faction = {
						limit = { target_of_powerful_faction_trigger = yes }
						order_by = faction_discontent
						save_scope_as = vassal_faction
						faction_leader = { save_scope_as = second_party } # For loc
						if = {
							limit = { exists = special_character }
							special_character = { save_scope_as = vassal_claimant }
						}
					}
				}
				flag:county_control = { #Control
					every_held_title = {
						limit = { petition_liege_county_control_trigger = yes }
						add_to_list = petition_liege_county_control_list
					}
					ordered_in_list = {
						list = petition_liege_county_control_list
						order_by = development_level
						save_scope_as = petition_county_example
					}
				}
				flag:county_convert = { #Convert
					every_held_title = {
						limit = { petition_liege_county_convert_trigger = yes }
						add_to_list = petition_liege_county_convert_list
					}
					ordered_in_list = {
						list = petition_liege_county_convert_list
						order_by = development_level
						save_scope_as = petition_county_example
					}
				}
				flag:county_opinion = { #Opinion
					every_held_title = {
						limit = { petition_liege_county_opinion_trigger = yes }
						add_to_list = petition_liege_county_opinion_list
					}
					ordered_in_list = {
						list = petition_liege_county_opinion_list
						order_by = {
							value = 0
							add = county_opinion
						}
						save_scope_as = petition_county_example
					}
				}
				flag:fortify_border = { #Fortify
					every_held_title = {
						limit = { petition_liege_fortify_border_trigger = yes }
						add_to_list = petition_liege_fortify_border_list
					}
					ordered_in_list = {
						list = petition_liege_fortify_border_list
						order_by = development_level
						save_scope_as = petition_county_example
						ordered_title_to_title_neighboring_county = {
							limit = {
								NOT = { holder.top_liege = scope:petition_vassal.top_liege }
							}
							order_by = holder.top_liege.max_military_strength
							holder.top_liege = { save_scope_as = second_party }
						}
					}
				}
				flag:title_liege = { #Title Liege
					ordered_claim = {
						limit = { petition_liege_title_liege_trigger = yes}
						order_by = tier
						save_scope_as = petition_claim
					}
				}
				flag:title_vassal = { #Title Vassal
					ordered_claim = {
						limit = { petition_liege_title_vassal_trigger = yes }
						order_by = tier
						save_scope_as = petition_claim
						holder = { save_scope_as = second_party }
					}
				}
				flag:construct_city = { #Construct City
					random_held_title = {
						limit = { petition_liege_construct_city_trigger = yes }
						weight = {
							modifier = {
								factor = 100
								county_has_no_city_trigger = yes
							}
							modifier = { factor = development_level }
						}
						save_scope_as = petition_construct_county
						random_county_province = {
							limit = { province_has_no_holding_trigger = yes }
							save_scope_as = petition_construct
						}
					}
				}
				flag:construct_temple = { #Construct Temple
					random_held_title = {
						limit = { petition_liege_construct_temple_trigger = yes }
						weight = {
							modifier = {
								factor = 100
								county_has_no_church_trigger = yes
							}
							modifier = { factor = development_level }
						}
						save_scope_as = petition_construct_county
						random_county_province = {
							limit = { province_has_no_holding_trigger = yes }
							save_scope_as = petition_construct
						}
					}
				}
				flag:development = { # Development
					capital_province.county = { save_scope_as = petition_county_example }
				}
			}
			scope:petition_liege = { trigger_event = petition_liege.0001 }
		}
	}
	on_complete = {
		activity_owner = {
			# Always
			if = {
				limit = { has_variable = petition_type }
				remove_variable = petition_type
			}
			# Council
			if = {
				limit = { has_variable = petition_liege_council_first }
				remove_variable = petition_liege_council_first
			}
			if = {
				limit = { has_variable = petition_liege_council_second }
				remove_variable = petition_liege_council_second
			}
		}
	}
	on_expire = {
		activity_owner = {
			save_scope_as = petition_vassal
			liege = { save_scope_as = petition_liege }
			trigger_event = petition_liege.0009 # Inform player that their liege refused to see them.
		}
	}
	on_invalidated = {
		activity_owner = {
			if = {
				limit = { exists = var:petition_liege_scope }
				var:petition_liege_scope = { save_scope_as = petition_liege }
				trigger_event = petition_liege.0601
			}
		}
		complete_activity = yes
	}
}

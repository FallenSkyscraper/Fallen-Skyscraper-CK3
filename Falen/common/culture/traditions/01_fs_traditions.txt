tradition_sea_peoples = {
	category = realm

	layers = {
		0 = diplo
		1 = mediterranean
		4 = ship.dds
	}
	
	is_shown = {
		OR ={
			this = culture:incheon
			any_parent_culture_or_above = {
				this = culture:incheon
			}
		}
	}
	can_pick = {
		OR ={
			this = culture:incheon
			any_parent_culture_or_above = {
				this = culture:incheon
			}
		}
	}
	
	parameters = {
	    wanderers_gain_extra_economic_skills = yes
		more_likely_to_leave_court = yes
		trade_ports_give_levies = yes
		can_travel_along_rivers = yes
		next_level_trade_ports = yes
		sea_peoples_coastal_holdings = yes
	}
	character_modifier = {
		republic_government_vassal_opinion = 10
		embarkation_cost_mult = -0.15
	}
	
	cost = {
		prestige = {
			add = {
				value = tradition_base_cost
				desc = BASE
				format = "BASE_VALUE_FORMAT"
			}
			# Ethos requirement.
			if = {
				limit = {
					NOR = {
						any_in_list = { list = traits this = flag:ethos_egalitarian }
						any_in_list = { list = traits this = flag:ethos_stoic }
						any_in_list = { list = traits this = flag:ethos_bureaucratic }
					}
				}
				add = {
					value = tradition_incompatible_ethos_penalty
					desc = not_egalitarian_stoic_or_bureaucratic_desc
				}
			}
			# Coastal requirement.
			if = {
				limit = {
					NOT = {
						any_culture_county = {
							percent >= 0.5
							any_county_province = {
								is_coastal = yes
							}
						}
					}
				}
				add = {
					value = tradition_unfulfilled_criteria_penalty
					desc = coastal_percentage_desc
				}
			}
			
			multiply = tradition_replacement_cost_if_relevant
		}
	}
	
	ai_will_do = {
		value = 100
		if = {
			limit = {
				scope:character = {
					any_sub_realm_county = {
						percent >= 0.6
						any_county_province = {
							is_coastal = yes
						}
					}
				}
			}
			add = 50
		}
		if = { # Make stacking a bit less common
			limit = {
				OR = {
					any_in_list = { list = traits this = flag:tradition_seafaring }
					any_in_list = { list = traits this = flag:tradition_fishermen }
				}
			}
			multiply = 0.75
		}
		if = {
			limit = {
				NOT = {
					scope:character = {
						any_sub_realm_county = {
							percent >= 0.3
							any_county_province = {
								is_coastal = yes
							}
						}
					}
				}
			}
			multiply = 0
		}
	}
}

tradition_legacy_of_city_union = {
	category = realm

	layers = {
		0 = steward
		1 = mediterranean
		4 = laurel.dds
	}

	is_shown = {
		OR ={
			this = culture:incheon
			any_parent_culture_or_above = {
				this = culture:incheon
			}
		}
		NOT = { has_cultural_tradition = tradition_parochialism }
	}
	can_pick = {
		OR ={
			this = culture:incheon
			any_parent_culture_or_above = {
				this = culture:incheon
			}
		}
		NOT = { has_cultural_tradition = tradition_parochialism }
	}
	
	parameters = {
		can_make_republican_vassals = yes
		city_buildings_more_powerful = yes
		city_buildings_less_control = yes
		republican_vassals_pay_more = yes
	}
	character_modifier = {
		city_holding_build_gold_cost = -0.05
		city_holding_holding_build_gold_cost = -0.05
		republic_government_vassal_opinion = -10
	}
	
	cost = {
		prestige = {
			add = {
				value = tradition_base_cost
				desc = BASE
				format = "BASE_VALUE_FORMAT"
			}
			if = {
				limit = {
					NOR = {
						any_in_list = { list = traits this = flag:ethos_courtly }
						any_in_list = { list = traits this = flag:ethos_communal }
						any_in_list = { list = traits this = flag:ethos_spiritual }
					}
				}
				add = {
					value = tradition_incompatible_ethos_penalty
					desc = not_courtly_communal_or_spiritual_desc
				}
			}
			if = {
				limit = {
					NOT = {
						scope:character = {
							any_sub_realm_county = {
								percent >= 0.9
								culture = scope:character.culture
								any_county_province = {
									has_holding_type = city_holding
								}
							}
						}
					}
				}
				add = {
					value = tradition_unfulfilled_criteria_penalty
					desc = 90_percent_cities_desc
				}
			}
			
			multiply = tradition_replacement_cost_if_relevant
		}
	}
	
	ai_will_do = {
		value = 100
		if = {
			limit = {
				NOT = {
					scope:character = {
						any_sub_realm_county = {
							percent >= 0.15
							culture = scope:character.culture
							any_county_province = {
								has_holding_type = city_holding
							}
						}
					}
				}
			}
			multiply = 0
		}
		if = {
			limit = {
				NOT = {
					scope:character = {
						any_vassal = {
							primary_title.tier > tier_county
							has_government = republic_government
						}
					}
				}
			}
			multiply = 0
		}
	}
}

tradition_sinocentrism = {
	category = realm

	layers = {
		0 = intrigue
		1 = mediterranean
		4 = noble.dds
	}
	
	parameters = {
		courtiers_less_likely_to_leave_same_culture_court = yes
		harder_to_hybridize = yes
	}
	culture_modifier = {
		cultural_acceptance_gain_mult = -0.35
	}
	character_modifier = {
		diplomatic_range_mult = -0.25
		same_culture_opinion = 5
		different_culture_opinion = -10
	}
	county_modifier = {
		monthly_county_control_change_add = 0.5
	}
	
	cost = {
		prestige = {
			add = {
				value = tradition_base_cost
				desc = BASE
				format = "BASE_VALUE_FORMAT"
			}
			if = {
				limit = {
					NOR = {
						any_in_list = { list = traits this = flag:ethos_communal }
						any_in_list = { list = traits this = flag:ethos_egalitarian }
						any_in_list = { list = traits this = flag:ethos_stoic }
					}
				}
				add = {
					value = tradition_incompatible_ethos_penalty
				}
			}
			if = {
				limit = {
					scope:character = {
						any_sub_realm_county = {
							culture = scope:character.culture
							any_neighboring_county = {
								NOT = {
									culture = scope:character.culture
								}
								culture = {
									cultural_acceptance = { target = scope:character.culture value >= 40 }
								}
							}
						}
					}
				}
				add = {
					value = tradition_unfulfilled_criteria_penalty
					desc = non_tolerated_cultures_desc
				}
			}
			
			multiply = tradition_replacement_cost_if_relevant
		}
	}
	
	ai_will_do = {
		value = 100
		if = {
			limit = {
				NOT = {
					is_divergent_culture = yes
				}
			}
			multiply = 0
		}
		if = {
			limit = {
				any_in_list = { list = traits this = flag:ethos_egalitarian }
			}
			multiply = 0
		}
	}
}
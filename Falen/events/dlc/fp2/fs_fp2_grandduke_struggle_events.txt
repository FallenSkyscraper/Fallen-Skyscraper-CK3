namespace = fp2_struggle
namespace = fs_fp2_struggle_2
namespace = fs_fp2_struggle
namespace = fp2_grandduke_struggle

fp2_grandduke_struggle.0003 = {
	hidden = yes
	scope = empty
	scope = struggle

	trigger = { # Should not need this, but, redundancy check! -h
		exists = struggle:juche_struggle
		struggle:juche_struggle = { any_involved_ruler = { count > 0 } } # For when the conflict is ongoing but nobody is left to fight it
	}

	immediate = {
		# prepare needed variables; they will be destroyed at the end of the immediate
		set_variable = {
			name = agents_for_escalation
			value = 0
		}
		set_variable = {
			name = agents_for_deescalation
			value = 0
		}

		# Go through the characters to distribute them between the potential transitions
		struggle:juche_struggle = {
			every_involved_ruler = {
				limit = { is_alive = yes }
				#######################
				# Play cue track
				######################
				if = {
					limit = { is_ai = no }
					play_music_cue = "mx_Struggle_Opening"
				}

				#######################
				# Check existing flags
				######################
				if = {
					limit = { has_character_flag = agenda_towards_escalation }
					change_variable = {
						name = agents_for_escalation
						add = 1
					}
				}
				else_if = {
					limit = { has_character_flag = agenda_towards_deescalation }
					change_variable = {
						name = agents_for_deescalation
						add = 1
					}
				}
				else = { # Set a flag
					#############################
					# Current Phase: Opportunity
					#############################
					if = {
						limit = { root = { is_struggle_phase = struggle_phase_grandduke_under_control } }
						random_list = {
							# Working towards Hostility
							# It should be for characters looking for direct conflicts and domination, with the will and ability to expand their realms
							100 = {
								# Odds modifiers
								fp2_struggle_set_ai_agenda_common_modifiers = {
									PHASE = out_of_control
									INTENT = escalation
								}

								# Apply effects
								fp2_struggle_apply_ai_agenda_effect = {
									INTENT = escalation
								}
							}
						}
					}
				}
			}
		}

		# Clean variables
		remove_variable = agents_for_escalation
		remove_variable = agents_for_deescalation
	}
}

fp2_grandduke_struggle.0501 = { # Fullscreen Intro Event
	type = character_event
	window = fullscreen_event
	title = fp2_grandduke_struggle.0501.t
	desc = {
		desc = fp2_grandduke_struggle.0501.desc
		first_valid = {
			triggered_desc = {
				trigger = {
					any_character_struggle = {
						involvement = involved
						is_struggle_type = juche_struggle
					}
				}
				desc = fp2_grandduke_struggle.0501.desc.involved
			}
			triggered_desc = {
				trigger = {
					any_character_struggle = {
						involvement = interloper
						is_struggle_type = juche_struggle
					}
				}
				desc = fp2_grandduke_struggle.0501.desc.interloper
			}
		}
	}
	theme = realm
	trigger = { # we need to prevent this from firing for all players when a new player joins in MP
		is_ai = no
		NOT = { has_character_flag = grandduke_struggle_intro_event_flag }
		fp2_character_any_involvement_grandduke_struggle_trigger = yes
 	}
	override_background = { reference = fp2_fullscreen_intro }
	override_sound = { reference = "event:/DLC/FP2/SFX/UI/fp2_struggle_ui_intro_animate" }

	widgets = {
		widget = {
 			gui = "event_window_widget_struggle_info"
 			container = "dynamic_content_widget"
 			controller = struggle_info
 			setup_scope = { struggle:juche_struggle = { save_scope_as = struggle } }
		}
	}
	immediate = {
		play_music_cue = "mx_Struggle_Opening"
		add_character_flag = grandduke_struggle_intro_event_flag
		save_scope_value_as = {
			name = start
			value = yes
		}
	}
	option = {
		name = fp2_grandduke_struggle_struggle.0501.a
	}
}